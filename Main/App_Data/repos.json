[{"name":"2d_Play","description":"unity 2d playground","html_url":"https://github.com/JeffreyMJohnson/2d_Play","contents":[{"type":"file","name":".gitignore"},{"type":"file","name":"LICENSE"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"2D_Retro_Clone","description":"2D retro shmup for assessment 2 towards video game programming diploma.","html_url":"https://github.com/JeffreyMJohnson/2D_Retro_Clone","contents":[{"type":"file","name":".gitattributes"},{"type":"file","name":".gitignore"},{"type":"file","name":"AIE Template.vcxproj"},{"type":"file","name":"AIE Template.vcxproj.filters"},{"type":"file","name":"AIE Template.vcxproj.user"},{"type":"file","name":"Galaxian.sln"},{"type":"file","name":"ReadMe.txt"},{"type":"dir","name":"docs"},{"type":"dir","name":"include"},{"type":"dir","name":"libs"},{"type":"dir","name":"resources"},{"type":"dir","name":"source"}],"ReadMe_html":"<div class=\"announce instapaper_body txt\" data-path=\"ReadMe.txt\" id=\"readme\"><div class=\"plain\"><pre>Retro Game\nAssignment ICAPRG406A - (second assesment) for 1st year Games Programming course 10343NAT Advanced Diploma of Professional GameDevelopment\nWritten by Jeffrey M Johnson\njeffrey.johnson@students.aie.edu.au\n\nThis is my omage to one of the original top-down shooters Galaxian by Namco. (<a href=\"http://www.arcade-history.com/?n=galaxian&amp;page=detail&amp;id=901\">http://www.arcade-history.com/?n=galaxian&amp;page=detail&amp;id=901</a>)\n\nIn this version you control your ship at the bottom of the screen by moving left (A key) or right (D key) and shooting at the enemy ships\n(space bar).  You only have one bullet at a time to shoot with and can't shoot again until it (the bullet) hit's something or is off the screen.\nThe enemy ships above you will attack on a regular basis from a random direction and will rain down bullets when attacking.  How high of a score can\nyou get before succumbing to the enemy hoard's?</pre></div></div>","UseMe":false},{"name":"AIE-First-Year-Framework","description":"framework for doing course work","html_url":"https://github.com/JeffreyMJohnson/AIE-First-Year-Framework","contents":[{"type":"file","name":".gitattributes"},{"type":"file","name":".gitignore"},{"type":"file","name":"AIE Template.sdf"},{"type":"file","name":"AIE Template.sln"},{"type":"file","name":"AIE Template.v12.suo"},{"type":"file","name":"AIE Template.vcxproj"},{"type":"file","name":"AIE Template.vcxproj.filters"},{"type":"file","name":"AIE Template.vcxproj.user"},{"type":"dir","name":"bin"},{"type":"dir","name":"include"},{"type":"dir","name":"libs"},{"type":"dir","name":"obj"},{"type":"dir","name":"resources"},{"type":"dir","name":"source"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"AITanks","description":"Tank demo for applying AI / path finding algorithms.","html_url":"https://github.com/JeffreyMJohnson/AITanks","contents":[{"type":"file","name":".gitattributes"},{"type":"file","name":".gitignore"},{"type":"file","name":".useme"},{"type":"dir","name":"Tanks"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":true},{"name":"AllBlownUp","description":"Unity project showing physics work.","html_url":"https://github.com/JeffreyMJohnson/AllBlownUp","contents":[{"type":"file","name":".gitignore"},{"type":"file","name":".useme"},{"type":"dir","name":"Assets"},{"type":"dir","name":"ProjectSettings"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":true},{"name":"AllHailTheProject","description":"This repo is for everyone collaborating on the game \"All Hail the Button\" made during Global Game Jam 2016 @ AIE Seattle campus.","html_url":"https://github.com/JeffreyMJohnson/AllHailTheProject","contents":[{"type":"file","name":".gitignore"},{"type":"file","name":".useme"},{"type":"file","name":"README.md"}],"ReadMe_html":"<div class=\"announce instapaper_body md\" data-path=\"README.md\" id=\"readme\"><article class=\"markdown-body entry-content\" itemprop=\"text\"><h1><a id=\"user-content-allhailtheproject\" class=\"anchor\" href=\"#allhailtheproject\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AllHailTheProject</h1>\n\n<p>This repo is for everyone collaborating on the game \"All Hail the Button\" made during Global Game Jam 2016 @ AIE Seattle campus.</p>\n</article></div>","UseMe":true},{"name":"AssesmentCriteria","description":"Assessment criteria for school assignments","html_url":"https://github.com/JeffreyMJohnson/AssesmentCriteria","contents":[{"type":"file","name":".gitattributes"},{"type":"file","name":".gitignore"},{"type":"file","name":"ADGP 101 - Assessment Criteria - Pong - SEA.pdf"},{"type":"file","name":"ADGP 105 - Assessment Criteria - Retro Game - SEA.pdf"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"AtlasEngine","description":"Sprite tool that creates a sprite sheet and atlas file.  ","html_url":"https://github.com/JeffreyMJohnson/AtlasEngine","contents":[{"type":"file","name":".gitignore"},{"type":"file","name":".useme"},{"type":"dir","name":"AtlasEngine"},{"type":"file","name":"README.pdf"},{"type":"dir","name":"Unit_Tests"},{"type":"dir","name":"docs"},{"type":"dir","name":"help"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":true},{"name":"aws-sdk-unity-samples","description":"This repository has samples that demonstrate various aspects of the AWS Mobile SDK for Unity, you can get the SDK source on Github (https://github.com/aws/aws-sdk-unity)","html_url":"https://github.com/JeffreyMJohnson/aws-sdk-unity-samples","contents":[{"type":"dir","name":"Chess Game Example Project"},{"type":"dir","name":"Cognito Sync Demo Project"},{"type":"dir","name":"Cognito Sync"},{"type":"dir","name":"DynamoDB"},{"type":"dir","name":"Kinesis"},{"type":"dir","name":"Lambda"},{"type":"file","name":"License.txt"},{"type":"dir","name":"Mobile Analytics"},{"type":"dir","name":"S3"},{"type":"dir","name":"SNS"},{"type":"dir","name":"SQS"},{"type":"dir","name":"SimpleEmail"},{"type":"file","name":"readme.md"}],"ReadMe_html":"<div class=\"announce instapaper_body md\" data-path=\"readme.md\" id=\"readme\"><article class=\"markdown-body entry-content\" itemprop=\"text\"><h1><a id=\"user-content-aws-mobile-sdk-for-unity-samples\" class=\"anchor\" href=\"#aws-mobile-sdk-for-unity-samples\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AWS Mobile SDK for Unity Samples</h1>\n\n<h2><a id=\"user-content-cognito-sync-sample\" class=\"anchor\" href=\"#cognito-sync-sample\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/awslabs/aws-sdk-unity-samples/tree/master/Cognito%20Sync\">Cognito Sync Sample</a></h2>\n\n<p>This sample snippet demonstrates how to securely manage and sync your game data and create unique identities via login providers.</p>\n\n<h2><a id=\"user-content-cognito-sync-unity-project\" class=\"anchor\" href=\"#cognito-sync-unity-project\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/awslabs/aws-sdk-unity-samples/tree/master/Cognito%20Sync%20Demo%20Project\">Cognito Sync Unity Project</a></h2>\n\n<p>This sample Unity project shows how to save game data to the cloud and access it accross devices using Cognito Sync.</p>\n\n<h2><a id=\"user-content-dynamodb-sample\" class=\"anchor\" href=\"#dynamodb-sample\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/awslabs/aws-sdk-unity-samples/tree/master/DynamoDB\">DynamoDB Sample</a></h2>\n\n<p>This sample demonstrates how to create / update / delete / query items using DynamoDB Object Mapper.</p>\n\n<h2><a id=\"user-content-s3-sample\" class=\"anchor\" href=\"#s3-sample\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/awslabs/aws-sdk-unity-samples/tree/master/S3\">S3 Sample</a></h2>\n\n<p>The S3 sample demonstrates the following:</p>\n\n<ul>\n<li>List all buckets in the AWS account</li>\n<li>List all objects in the specified bucket</li>\n<li>Upload an object into the specified bucket</li>\n<li>Download an object from the specified bucket</li>\n</ul>\n\n<h2><a id=\"user-content-mobile-analytics-sample\" class=\"anchor\" href=\"#mobile-analytics-sample\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/awslabs/aws-sdk-unity-samples/tree/master/Mobile%20Analytics\">Mobile Analytics Sample</a></h2>\n\n<p>The Mobile Analytics sample demonstrates the following:</p>\n\n<ul>\n<li>How to integrate Mobile Analytics client with your app</li>\n<li>Create and use custom event</li>\n<li>Create and use monetization event</li>\n<li>Record and send events to server</li>\n</ul>\n</article></div>","UseMe":false},{"name":"Cager","description":"OpenGL Graphics engine","html_url":"https://github.com/JeffreyMJohnson/Cager","contents":[{"type":"file","name":".gitignore"},{"type":"dir","name":"Cager_Proj"},{"type":"file","name":"README.md"},{"type":"dir","name":"Test_App"},{"type":"dir","name":"Unit_tests"}],"ReadMe_html":"<div class=\"announce instapaper_body md\" data-path=\"README.md\" id=\"readme\"><article class=\"markdown-body entry-content\" itemprop=\"text\"><h1><a id=\"user-content-cager\" class=\"anchor\" href=\"#cager\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cager</h1>\n\n<p>OpenGL Graphics engine</p>\n</article></div>","UseMe":false},{"name":"CodeTest","description":null,"html_url":"https://github.com/JeffreyMJohnson/CodeTest","contents":[{"type":"file","name":".gitignore"},{"type":"file","name":".useme"},{"type":"dir","name":"EscalationTest"},{"type":"file","name":"Prog_Tests.sln"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":true},{"name":"CSharpExercises","description":null,"html_url":"https://github.com/JeffreyMJohnson/CSharpExercises","contents":[{"type":"file","name":".gitignore"},{"type":"file","name":"CSharpExercises.sln"},{"type":"dir","name":"ConsoleApplication1"},{"type":"dir","name":"classes"},{"type":"dir","name":"containers"},{"type":"dir","name":"interfaces"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"DailyExercises","description":null,"html_url":"https://github.com/JeffreyMJohnson/DailyExercises","contents":[{"type":"file","name":".gitignore"},{"type":"dir","name":"DaileExercises"},{"type":"dir","name":"ISBNTester"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"DailyProgrammer1","description":"Letter sorter","html_url":"https://github.com/JeffreyMJohnson/DailyProgrammer1","contents":[{"type":"file","name":".gitattributes"},{"type":"file","name":".gitignore"},{"type":"file","name":"DailyProgrammer1.sdf"},{"type":"file","name":"DailyProgrammer1.sln"},{"type":"file","name":"DailyProgrammer1.v12.suo"},{"type":"dir","name":"DailyProgrammer1"},{"type":"dir","name":"Debug"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"DownTheRabbitHole","description":"GGJ15","html_url":"https://github.com/JeffreyMJohnson/DownTheRabbitHole","contents":[{"type":"file","name":".gitattributes"},{"type":"file","name":".gitignore"},{"type":"file","name":".useme"},{"type":"dir","name":"New Unity Project 4"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":true},{"name":"DungeonMaster","description":null,"html_url":"https://github.com/JeffreyMJohnson/DungeonMaster","contents":[{"type":"file","name":".gitignore"},{"type":"dir","name":"DungeonMaster"},{"type":"file","name":"start.txt"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"exercises","description":"solution that holds exercise projects","html_url":"https://github.com/JeffreyMJohnson/exercises","contents":[{"type":"file","name":".gitattributes"},{"type":"file","name":".gitignore"},{"type":"file","name":"Exercises.sln"},{"type":"dir","name":"Exercises"},{"type":"dir","name":"LINQ"},{"type":"dir","name":"PublisherSubscriber"},{"type":"dir","name":"RandomStringSort"},{"type":"dir","name":"binary_and_bits"},{"type":"dir","name":"container_algorithms"},{"type":"dir","name":"database"},{"type":"dir","name":"exception_handling"},{"type":"dir","name":"factory"},{"type":"dir","name":"frame_independent_movement"},{"type":"dir","name":"function_pointers"},{"type":"dir","name":"graphs"},{"type":"dir","name":"interpolation_and_splines"},{"type":"dir","name":"list_basics"},{"type":"dir","name":"list_complex"},{"type":"dir","name":"maps"},{"type":"dir","name":"memory_logging"},{"type":"dir","name":"queues"},{"type":"dir","name":"sigleton"},{"type":"dir","name":"stacks"},{"type":"dir","name":"understanding_templates"},{"type":"dir","name":"vectors"},{"type":"dir","name":"visitor"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"exercises2","description":"Second repo of class exercises beginning with OpenGL","html_url":"https://github.com/JeffreyMJohnson/exercises2","contents":[{"type":"file","name":".gitignore"},{"type":"file","name":"exercises2.sln"},{"type":"dir","name":"intro_OpenGL"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"GachaTown","description":null,"html_url":"https://github.com/JeffreyMJohnson/GachaTown","contents":[{"type":"file","name":".gitignore"},{"type":"file","name":".useme"},{"type":"dir","name":"Assets"},{"type":"dir","name":"ProjectSettings"},{"type":"file","name":"README.md"},{"type":"file","name":"credits.txt"},{"type":"file","name":"upgrade notes.txt"}],"ReadMe_html":"<div class=\"announce instapaper_body md\" data-path=\"README.md\" id=\"readme\"><article class=\"markdown-body entry-content\" itemprop=\"text\"><p><a href=\"https://github.com/JeffreyMJohnson/GachaTown/blob/develop/Assets/Sprites/1_Splash/gachatownlogo3_medium.png\" target=\"_blank\"><img src=\"https://github.com/JeffreyMJohnson/GachaTown/raw/develop/Assets/Sprites/1_Splash/gachatownlogo3_medium.png\" alt=\"Image of GachaTown logo\" style=\"max-width:100%;\"></a></p>\n\n<h1><a id=\"user-content-gachatown\" class=\"anchor\" href=\"#gachatown\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GachaTown</h1>\n\n<p><a href=\"http://jeffreymjohnson.net/UnityProjects/GachaTown/index.html\">Play a WebGL port I forked off the main repo.</a></p>\n\n<p><a href=\"http://gachatown.wix.com/game\">Game's Landing Site</a></p>\n\n<blockquote>\n<p>\"Gachatown is a charming, colorful game that focuses on the experience of obtaining new characters from a gachapon machine. The fun doesn't stop there; with your collection, you can create an interactive town to earn you even more coins to extend your collection further! As you play, you can unlock more machines to build environments to your own preferences!\"</p>\n</blockquote>\n\n<p>This was the final project working towards my programming diploma. I was chosen to be the Technical director of a team of three programmers including myself. We were teamed with a group of senior art students as well for an art pipeline to be established.</p>\n\n<p>I decided to use a SCRUM / Agile management style, so an overall roadmap was created and with that a one-week sprint task list was chosen. A complete, working (albeit crude) application was done by the one-week deadline and we iterated on that build, improving each week.</p>\n\n<p>My programming responsibilities were designing and implementing the collection and management backend systems as well as owning a main scene in the game (the town scene) .</p>\n\n<p>After 2 months of working on the prototype, it was shown at iFest on May 14, 2016 in Seattle, WA. We received a lot of great feedback, and I personally gained some new energy for the project seeing strangers enjoying what we have been working on. This is why we do it.</p>\n</article></div>","UseMe":true},{"name":"Gems","description":"Code from Game Programming Gems series that might be useful.","html_url":"https://github.com/JeffreyMJohnson/Gems","contents":[{"type":"file","name":".gitignore"},{"type":"file","name":"Gems.sln"},{"type":"dir","name":"singleton"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"GGJ15","description":"Project for global game jam.","html_url":"https://github.com/JeffreyMJohnson/GGJ15","contents":[{"type":"file","name":".gitignore"},{"type":"dir","name":"Assets"},{"type":"dir","name":"ProjectSettings"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"GLFramework","description":"OpenGL Framework for Assessment number 4","html_url":"https://github.com/JeffreyMJohnson/GLFramework","contents":[{"type":"file","name":".gitattributes"},{"type":"file","name":".gitignore"},{"type":"dir","name":"framework"},{"type":"dir","name":"framework2"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"glPlay","description":null,"html_url":"https://github.com/JeffreyMJohnson/glPlay","contents":[{"type":"file","name":".gitignore"},{"type":"dir","name":"glPlay"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"gl_tut","description":"OpenGL tutorial project for AIE second year","html_url":"https://github.com/JeffreyMJohnson/gl_tut","contents":[{"type":"file","name":".gitignore"},{"type":"file","name":"gl_tut.sln"},{"type":"file","name":"gl_tut.vcxproj"},{"type":"file","name":"gl_tut.vcxproj.filters"},{"type":"dir","name":"include"},{"type":"dir","name":"libs"},{"type":"dir","name":"source"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"GoogleTest","description":"Google's framework for writing C++ tests on a variety of platforms (Linux, Mac OS X, Windows, Cygwin, Windows CE, and Symbian). Based on the xUnit architecture. Supports automatic test discovery, a rich set of assertions, user-defined assertions, death tests, fatal and non-fatal failures, value- and type-parameterized tests, various options for running the tests, and XML test report generation.","html_url":"https://github.com/JeffreyMJohnson/GoogleTest","contents":[{"type":"file","name":".gitattributes"},{"type":"file","name":".gitignore"},{"type":"file","name":"CHANGES"},{"type":"file","name":"CMakeLists.txt"},{"type":"file","name":"CONTRIBUTORS"},{"type":"file","name":"LICENSE"},{"type":"file","name":"Makefile.am"},{"type":"file","name":"Makefile.in"},{"type":"file","name":"README"},{"type":"file","name":"aclocal.m4"},{"type":"dir","name":"build-aux"},{"type":"dir","name":"cmake"},{"type":"dir","name":"codegear"},{"type":"file","name":"configure"},{"type":"file","name":"configure.ac"},{"type":"dir","name":"fused-src"},{"type":"dir","name":"include"},{"type":"dir","name":"m4"},{"type":"dir","name":"make"},{"type":"dir","name":"msvc"},{"type":"dir","name":"samples"},{"type":"dir","name":"scripts"},{"type":"dir","name":"src"},{"type":"dir","name":"test"},{"type":"dir","name":"xcode"}],"ReadMe_html":"<div class=\"announce instapaper_body \" data-path=\"README\" id=\"readme\"><div class=\"plain\"><pre>Google C++ Testing Framework\n============================\n\n<a href=\"http://code.google.com/p/googletest/\">http://code.google.com/p/googletest/</a>\n\nOverview\n--------\n\nGoogle's framework for writing C++ tests on a variety of platforms\n(Linux, Mac OS X, Windows, Windows CE, Symbian, etc).  Based on the\nxUnit architecture.  Supports automatic test discovery, a rich set of\nassertions, user-defined assertions, death tests, fatal and non-fatal\nfailures, various options for running the tests, and XML test report\ngeneration.\n\nPlease see the project page above for more information as well as the\nmailing list for questions, discussions, and development.  There is\nalso an IRC channel on OFTC (irc.oftc.net) #gtest available.  Please\njoin us!\n\nRequirements for End Users\n--------------------------\n\nGoogle Test is designed to have fairly minimal requirements to build\nand use with your projects, but there are some.  Currently, we support\nLinux, Windows, Mac OS X, and Cygwin.  We will also make our best\neffort to support other platforms (e.g. Solaris, AIX, and z/OS).\nHowever, since core members of the Google Test project have no access\nto these platforms, Google Test may have outstanding issues there.  If\nyou notice any problems on your platform, please notify\ngoogletestframework@googlegroups.com.  Patches for fixing them are\neven more welcome!\n\n### Linux Requirements ###\n\nThese are the base requirements to build and use Google Test from a source\npackage (as described below):\n  * GNU-compatible Make or gmake\n  * POSIX-standard shell\n  * POSIX(-2) Regular Expressions (regex.h)\n  * A C++98-standard-compliant compiler\n\n### Windows Requirements ###\n\n  * Microsoft Visual C++ 7.1 or newer\n\n### Cygwin Requirements ###\n\n  * Cygwin 1.5.25-14 or newer\n\n### Mac OS X Requirements ###\n\n  * Mac OS X 10.4 Tiger or newer\n  * Developer Tools Installed\n\nAlso, you'll need CMake 2.6.4 or higher if you want to build the\nsamples using the provided CMake script, regardless of the platform.\n\nRequirements for Contributors\n-----------------------------\n\nWe welcome patches.  If you plan to contribute a patch, you need to\nbuild Google Test and its own tests from an SVN checkout (described\nbelow), which has further requirements:\n\n  * Python version 2.3 or newer (for running some of the tests and\n    re-generating certain source files from templates)\n  * CMake 2.6.4 or newer\n\nGetting the Source\n------------------\n\nThere are two primary ways of getting Google Test's source code: you\ncan download a stable source release in your preferred archive format,\nor directly check out the source from our Subversion (SVN) repositary.\nThe SVN checkout requires a few extra steps and some extra software\npackages on your system, but lets you track the latest development and\nmake patches much more easily, so we highly encourage it.\n\n### Source Package ###\n\nGoogle Test is released in versioned source packages which can be\ndownloaded from the download page [1].  Several different archive\nformats are provided, but the only difference is the tools used to\nmanipulate them, and the size of the resulting file.  Download\nwhichever you are most comfortable with.\n\n  [1] <a href=\"http://code.google.com/p/googletest/downloads/list\">http://code.google.com/p/googletest/downloads/list</a>\n\nOnce the package is downloaded, expand it using whichever tools you\nprefer for that type.  This will result in a new directory with the\nname \"gtest-X.Y.Z\" which contains all of the source code.  Here are\nsome examples on Linux:\n\n  tar -xvzf gtest-X.Y.Z.tar.gz\n  tar -xvjf gtest-X.Y.Z.tar.bz2\n  unzip gtest-X.Y.Z.zip\n\n### SVN Checkout ###\n\nTo check out the main branch (also known as the \"trunk\") of Google\nTest, run the following Subversion command:\n\n  svn checkout <a href=\"http://googletest.googlecode.com/svn/trunk/\">http://googletest.googlecode.com/svn/trunk/</a> gtest-svn\n\nSetting up the Build\n--------------------\n\nTo build Google Test and your tests that use it, you need to tell your\nbuild system where to find its headers and source files.  The exact\nway to do it depends on which build system you use, and is usually\nstraightforward.\n\n### Generic Build Instructions ###\n\nSuppose you put Google Test in directory ${GTEST_DIR}.  To build it,\ncreate a library build target (or a project as called by Visual Studio\nand Xcode) to compile\n\n  ${GTEST_DIR}/src/gtest-all.cc\n\nwith ${GTEST_DIR}/include in the system header search path and ${GTEST_DIR}\nin the normal header search path.  Assuming a Linux-like system and gcc,\nsomething like the following will do:\n\n  g++ -isystem ${GTEST_DIR}/include -I${GTEST_DIR} \\\n      -pthread -c ${GTEST_DIR}/src/gtest-all.cc\n  ar -rv libgtest.a gtest-all.o\n\n(We need -pthread as Google Test uses threads.)\n\nNext, you should compile your test source file with\n${GTEST_DIR}/include in the system header search path, and link it\nwith gtest and any other necessary libraries:\n\n  g++ -isystem ${GTEST_DIR}/include -pthread path/to/your_test.cc libgtest.a \\\n      -o your_test\n\nAs an example, the make/ directory contains a Makefile that you can\nuse to build Google Test on systems where GNU make is available\n(e.g. Linux, Mac OS X, and Cygwin).  It doesn't try to build Google\nTest's own tests.  Instead, it just builds the Google Test library and\na sample test.  You can use it as a starting point for your own build\nscript.\n\nIf the default settings are correct for your environment, the\nfollowing commands should succeed:\n\n  cd ${GTEST_DIR}/make\n  make\n  ./sample1_unittest\n\nIf you see errors, try to tweak the contents of make/Makefile to make\nthem go away.  There are instructions in make/Makefile on how to do\nit.\n\n### Using CMake ###\n\nGoogle Test comes with a CMake build script (CMakeLists.txt) that can\nbe used on a wide range of platforms (\"C\" stands for cross-platofrm.).\nIf you don't have CMake installed already, you can download it for\nfree from <a href=\"http://www.cmake.org/\">http://www.cmake.org/</a>.\n\nCMake works by generating native makefiles or build projects that can\nbe used in the compiler environment of your choice.  The typical\nworkflow starts with:\n\n  mkdir mybuild       # Create a directory to hold the build output.\n  cd mybuild\n  cmake ${GTEST_DIR}  # Generate native build scripts.\n\nIf you want to build Google Test's samples, you should replace the\nlast command with\n\n  cmake -Dgtest_build_samples=ON ${GTEST_DIR}\n\nIf you are on a *nix system, you should now see a Makefile in the\ncurrent directory.  Just type 'make' to build gtest.\n\nIf you use Windows and have Vistual Studio installed, a gtest.sln file\nand several .vcproj files will be created.  You can then build them\nusing Visual Studio.\n\nOn Mac OS X with Xcode installed, a .xcodeproj file will be generated.\n\n### Legacy Build Scripts ###\n\nBefore settling on CMake, we have been providing hand-maintained build\nprojects/scripts for Visual Studio, Xcode, and Autotools.  While we\ncontinue to provide them for convenience, they are not actively\nmaintained any more.  We highly recommend that you follow the\ninstructions in the previous two sections to integrate Google Test\nwith your existing build system.\n\nIf you still need to use the legacy build scripts, here's how:\n\nThe msvc\\ folder contains two solutions with Visual C++ projects.\nOpen the gtest.sln or gtest-md.sln file using Visual Studio, and you\nare ready to build Google Test the same way you build any Visual\nStudio project.  Files that have names ending with -md use DLL\nversions of Microsoft runtime libraries (the /MD or the /MDd compiler\noption).  Files without that suffix use static versions of the runtime\nlibraries (the /MT or the /MTd option).  Please note that one must use\nthe same option to compile both gtest and the test code.  If you use\nVisual Studio 2005 or above, we recommend the -md version as /MD is\nthe default for new projects in these versions of Visual Studio.\n\nOn Mac OS X, open the gtest.xcodeproj in the xcode/ folder using\nXcode.  Build the \"gtest\" target.  The universal binary framework will\nend up in your selected build directory (selected in the Xcode\n\"Preferences...\" -&gt; \"Building\" pane and defaults to xcode/build).\nAlternatively, at the command line, enter:\n\n  xcodebuild\n\nThis will build the \"Release\" configuration of gtest.framework in your\ndefault build location.  See the \"xcodebuild\" man page for more\ninformation about building different configurations and building in\ndifferent locations.\n\nIf you wish to use the Google Test Xcode project with Xcode 4.x and\nabove, you need to either:\n * update the SDK configuration options in xcode/Config/General.xconfig.\n   Comment options SDKROOT, MACOS_DEPLOYMENT_TARGET, and GCC_VERSION. If\n   you choose this route you lose the ability to target earlier versions\n   of MacOS X.\n * Install an SDK for an earlier version. This doesn't appear to be\n   supported by Apple, but has been reported to work\n   (<a href=\"http://stackoverflow.com/questions/5378518\">http://stackoverflow.com/questions/5378518</a>).\n\nTweaking Google Test\n--------------------\n\nGoogle Test can be used in diverse environments.  The default\nconfiguration may not work (or may not work well) out of the box in\nsome environments.  However, you can easily tweak Google Test by\ndefining control macros on the compiler command line.  Generally,\nthese macros are named like GTEST_XYZ and you define them to either 1\nor 0 to enable or disable a certain feature.\n\nWe list the most frequently used macros below.  For a complete list,\nsee file include/gtest/internal/gtest-port.h.\n\n### Choosing a TR1 Tuple Library ###\n\nSome Google Test features require the C++ Technical Report 1 (TR1)\ntuple library, which is not yet available with all compilers.  The\ngood news is that Google Test implements a subset of TR1 tuple that's\nenough for its own need, and will automatically use this when the\ncompiler doesn't provide TR1 tuple.\n\nUsually you don't need to care about which tuple library Google Test\nuses.  However, if your project already uses TR1 tuple, you need to\ntell Google Test to use the same TR1 tuple library the rest of your\nproject uses, or the two tuple implementations will clash.  To do\nthat, add\n\n  -DGTEST_USE_OWN_TR1_TUPLE=0\n\nto the compiler flags while compiling Google Test and your tests.  If\nyou want to force Google Test to use its own tuple library, just add\n\n  -DGTEST_USE_OWN_TR1_TUPLE=1\n\nto the compiler flags instead.\n\nIf you don't want Google Test to use tuple at all, add\n\n  -DGTEST_HAS_TR1_TUPLE=0\n\nand all features using tuple will be disabled.\n\n### Multi-threaded Tests ###\n\nGoogle Test is thread-safe where the pthread library is available.\nAfter #include \"gtest/gtest.h\", you can check the GTEST_IS_THREADSAFE\nmacro to see whether this is the case (yes if the macro is #defined to\n1, no if it's undefined.).\n\nIf Google Test doesn't correctly detect whether pthread is available\nin your environment, you can force it with\n\n  -DGTEST_HAS_PTHREAD=1\n\nor\n\n  -DGTEST_HAS_PTHREAD=0\n\nWhen Google Test uses pthread, you may need to add flags to your\ncompiler and/or linker to select the pthread library, or you'll get\nlink errors.  If you use the CMake script or the deprecated Autotools\nscript, this is taken care of for you.  If you use your own build\nscript, you'll need to read your compiler and linker's manual to\nfigure out what flags to add.\n\n### As a Shared Library (DLL) ###\n\nGoogle Test is compact, so most users can build and link it as a\nstatic library for the simplicity.  You can choose to use Google Test\nas a shared library (known as a DLL on Windows) if you prefer.\n\nTo compile *gtest* as a shared library, add\n\n  -DGTEST_CREATE_SHARED_LIBRARY=1\n\nto the compiler flags.  You'll also need to tell the linker to produce\na shared library instead - consult your linker's manual for how to do\nit.\n\nTo compile your *tests* that use the gtest shared library, add\n\n  -DGTEST_LINKED_AS_SHARED_LIBRARY=1\n\nto the compiler flags.\n\nNote: while the above steps aren't technically necessary today when\nusing some compilers (e.g. GCC), they may become necessary in the\nfuture, if we decide to improve the speed of loading the library (see\n<a href=\"http://gcc.gnu.org/wiki/Visibility\">http://gcc.gnu.org/wiki/Visibility</a> for details).  Therefore you are\nrecommended to always add the above flags when using Google Test as a\nshared library.  Otherwise a future release of Google Test may break\nyour build script.\n\n### Avoiding Macro Name Clashes ###\n\nIn C++, macros don't obey namespaces.  Therefore two libraries that\nboth define a macro of the same name will clash if you #include both\ndefinitions.  In case a Google Test macro clashes with another\nlibrary, you can force Google Test to rename its macro to avoid the\nconflict.\n\nSpecifically, if both Google Test and some other code define macro\nFOO, you can add\n\n  -DGTEST_DONT_DEFINE_FOO=1\n\nto the compiler flags to tell Google Test to change the macro's name\nfrom FOO to GTEST_FOO.  Currently FOO can be FAIL, SUCCEED, or TEST.\nFor example, with -DGTEST_DONT_DEFINE_TEST=1, you'll need to write\n\n  GTEST_TEST(SomeTest, DoesThis) { ... }\n\ninstead of\n\n  TEST(SomeTest, DoesThis) { ... }\n\nin order to define a test.\n\nUpgrating from an Earlier Version\n---------------------------------\n\nWe strive to keep Google Test releases backward compatible.\nSometimes, though, we have to make some breaking changes for the\nusers' long-term benefits.  This section describes what you'll need to\ndo if you are upgrading from an earlier version of Google Test.\n\n### Upgrading from 1.3.0 or Earlier ###\n\nYou may need to explicitly enable or disable Google Test's own TR1\ntuple library.  See the instructions in section \"Choosing a TR1 Tuple\nLibrary\".\n\n### Upgrading from 1.4.0 or Earlier ###\n\nThe Autotools build script (configure + make) is no longer officially\nsupportted.  You are encouraged to migrate to your own build system or\nuse CMake.  If you still need to use Autotools, you can find\ninstructions in the README file from Google Test 1.4.0.\n\nOn platforms where the pthread library is available, Google Test uses\nit in order to be thread-safe.  See the \"Multi-threaded Tests\" section\nfor what this means to your build script.\n\nIf you use Microsoft Visual C++ 7.1 with exceptions disabled, Google\nTest will no longer compile.  This should affect very few people, as a\nlarge portion of STL (including &lt;string&gt;) doesn't compile in this mode\nanyway.  We decided to stop supporting it in order to greatly simplify\nGoogle Test's implementation.\n\nDeveloping Google Test\n----------------------\n\nThis section discusses how to make your own changes to Google Test.\n\n### Testing Google Test Itself ###\n\nTo make sure your changes work as intended and don't break existing\nfunctionality, you'll want to compile and run Google Test's own tests.\nFor that you can use CMake:\n\n  mkdir mybuild\n  cd mybuild\n  cmake -Dgtest_build_tests=ON ${GTEST_DIR}\n\nMake sure you have Python installed, as some of Google Test's tests\nare written in Python.  If the cmake command complains about not being\nable to find Python (\"Could NOT find PythonInterp (missing:\nPYTHON_EXECUTABLE)\"), try telling it explicitly where your Python\nexecutable can be found:\n\n  cmake -DPYTHON_EXECUTABLE=path/to/python -Dgtest_build_tests=ON ${GTEST_DIR}\n\nNext, you can build Google Test and all of its own tests.  On *nix,\nthis is usually done by 'make'.  To run the tests, do\n\n  make test\n\nAll tests should pass.\n\n### Regenerating Source Files ###\n\nSome of Google Test's source files are generated from templates (not\nin the C++ sense) using a script.  A template file is named FOO.pump,\nwhere FOO is the name of the file it will generate.  For example, the\nfile include/gtest/internal/gtest-type-util.h.pump is used to generate\ngtest-type-util.h in the same directory.\n\nNormally you don't need to worry about regenerating the source files,\nunless you need to modify them.  In that case, you should modify the\ncorresponding .pump files instead and run the pump.py Python script to\nregenerate them.  You can find pump.py in the scripts/ directory.\nRead the Pump manual [2] for how to use it.\n\n  [2] <a href=\"http://code.google.com/p/googletest/wiki/PumpManual\">http://code.google.com/p/googletest/wiki/PumpManual</a>\n\n### Contributing a Patch ###\n\nWe welcome patches.  Please read the Google Test developer's guide [3]\nfor how you can contribute.  In particular, make sure you have signed\nthe Contributor License Agreement, or we won't be able to accept the\npatch.\n\n  [3] <a href=\"http://code.google.com/p/googletest/wiki/GoogleTestDevGuide\">http://code.google.com/p/googletest/wiki/GoogleTestDevGuide</a>\n\nHappy testing!\n</pre></div></div>","UseMe":false},{"name":"Graphics","description":"Tutorial projects for Computer Graphics section of AIE game programming course.","html_url":"https://github.com/JeffreyMJohnson/Graphics","contents":[{"type":"file","name":".gitignore"},{"type":"file","name":"Graphics.sln"},{"type":"file","name":"LICENSE"},{"type":"dir","name":"OBJ_Loader"},{"type":"file","name":"README.md"},{"type":"dir","name":"Rendering_Geometry"},{"type":"dir","name":"Textures"}],"ReadMe_html":"<div class=\"announce instapaper_body md\" data-path=\"README.md\" id=\"readme\"><article class=\"markdown-body entry-content\" itemprop=\"text\"><h1><a id=\"user-content-graphics\" class=\"anchor\" href=\"#graphics\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Graphics</h1>\n\n<p>Tutorial projects for Computer Graphics section of AIE game programming course.</p>\n</article></div>","UseMe":false},{"name":"graphs_trees_exercise","description":null,"html_url":"https://github.com/JeffreyMJohnson/graphs_trees_exercise","contents":[{"type":"file","name":".gitignore"},{"type":"file","name":"AIE Template.sln"},{"type":"file","name":"AIE Template.vcxproj"},{"type":"file","name":"AIE Template.vcxproj.filters"},{"type":"dir","name":"include"},{"type":"dir","name":"libs"},{"type":"dir","name":"resources"},{"type":"dir","name":"source"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"HackerRank","description":"HackerRank problems","html_url":"https://github.com/JeffreyMJohnson/HackerRank","contents":[{"type":"file","name":".gitignore"},{"type":"file","name":".useme"},{"type":"dir","name":"BinarySearchTree"},{"type":"dir","name":"Boggle"},{"type":"dir","name":"CamelCase"},{"type":"dir","name":"DataStructures"},{"type":"dir","name":"DataStructuresTesting"},{"type":"dir","name":"EscalationTest"},{"type":"dir","name":"EscalationTestTests"},{"type":"file","name":"HackerRank.VC.db"},{"type":"file","name":"HackerRank.sln"},{"type":"dir","name":"HackerRankUtility"},{"type":"dir","name":"Hackerrank_sample_test"},{"type":"dir","name":"Hackerrank_test"},{"type":"dir","name":"IndeedTest1"},{"type":"file","name":"LICENSE"},{"type":"dir","name":"LazyProfessor"},{"type":"dir","name":"LinkedListInsert"},{"type":"dir","name":"LonelyInteger"},{"type":"dir","name":"MinimumClosestNumbers"},{"type":"dir","name":"Operator_Overload"},{"type":"dir","name":"PalindromeIndex"},{"type":"dir","name":"Pangrams"},{"type":"dir","name":"Preprocessor_solution"},{"type":"dir","name":"Print_Linked_List"},{"type":"file","name":"README.md"},{"type":"dir","name":"RectangularGame2"},{"type":"dir","name":"Rectangular_Game"},{"type":"dir","name":"Sherlock and the beast tests"},{"type":"dir","name":"Sherlock_And_The_Beast"},{"type":"dir","name":"TimeConversion"},{"type":"dir","name":"TimeConvertor"},{"type":"dir","name":"Trees"},{"type":"dir","name":"Truck_Tour"},{"type":"dir","name":"zigzag_array"}],"ReadMe_html":"<div class=\"announce instapaper_body md\" data-path=\"README.md\" id=\"readme\"><article class=\"markdown-body entry-content\" itemprop=\"text\"><h1><a id=\"user-content-hackerrank\" class=\"anchor\" href=\"#hackerrank\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HackerRank</h1>\n\n<p>HackerRank problems</p>\n</article></div>","UseMe":true},{"name":"invaders","description":null,"html_url":"https://github.com/JeffreyMJohnson/invaders","contents":[{"type":"file","name":".classpath"},{"type":"file","name":".gitignore"},{"type":"file","name":".project"},{"type":"dir","name":".settings"},{"type":"file","name":"AndroidManifest.xml"},{"type":"file","name":"Assembly-CSharp-vs.csproj"},{"type":"file","name":"Assembly-CSharp.csproj"},{"type":"dir","name":"Assets"},{"type":"file","name":"Invaders Writeup.odt"},{"type":"dir","name":"ProjectSettings"},{"type":"file","name":"README.md"},{"type":"dir","name":"bin"},{"type":"dir","name":"gen"},{"type":"file","name":"invaders-csharp.sln"},{"type":"file","name":"invaders.sln"},{"type":"file","name":"invaders.userprefs"},{"type":"file","name":"invaders.v12.suo"},{"type":"dir","name":"obj"},{"type":"file","name":"proguard-project.txt"},{"type":"file","name":"project.properties"},{"type":"dir","name":"res"},{"type":"dir","name":"src"}],"ReadMe_html":"<div class=\"announce instapaper_body md\" data-path=\"README.md\" id=\"readme\"><article class=\"markdown-body entry-content\" itemprop=\"text\"><h1><a id=\"user-content-invaders\" class=\"anchor\" href=\"#invaders\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>invaders</h1>\n\n<p>2d game based on old school game </p>\n\n<p>I'm going through some 2d game development tutorials and am going to try and write this game as I go. Focusing on using direct draw() functions to Android canvas to start and get a feel for graphics development. Nothing fancy but hope to publish soon to google play.</p>\n</article></div>","UseMe":false},{"name":"InvadingSpace","description":"Space will be invaded","html_url":"https://github.com/JeffreyMJohnson/InvadingSpace","contents":[{"type":"file","name":".gitattributes"},{"type":"file","name":".gitignore"},{"type":"file","name":"AIE Template.sln"},{"type":"file","name":"AIE Template.vcxproj"},{"type":"file","name":"AIE Template.vcxproj.filters"},{"type":"file","name":"AIE Template.vcxproj.user"},{"type":"file","name":"Bullet.cpp"},{"type":"file","name":"Bullet.h"},{"type":"file","name":"Enemy.cpp"},{"type":"file","name":"Enemy.h"},{"type":"file","name":"Entity.cpp"},{"type":"file","name":"Entity.h"},{"type":"file","name":"Player.cpp"},{"type":"file","name":"Player.h"},{"type":"file","name":"Window.h"},{"type":"dir","name":"include"},{"type":"dir","name":"libs"},{"type":"dir","name":"resources"},{"type":"dir","name":"source"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"JeffreyMJohnson.github.io","description":null,"html_url":"https://github.com/JeffreyMJohnson/JeffreyMJohnson.github.io","contents":[{"type":"file","name":".gitignore"},{"type":"dir","name":"Ass_Pain"},{"type":"dir","name":"QItUp"},{"type":"file","name":"_config.yml"},{"type":"dir","name":"_includes"},{"type":"dir","name":"_layouts"},{"type":"dir","name":"_posts"},{"type":"dir","name":"_sass"},{"type":"file","name":"about.md"},{"type":"dir","name":"assets"},{"type":"dir","name":"css"},{"type":"file","name":"feed.xml"},{"type":"file","name":"index.html"},{"type":"dir","name":"pathfinder"},{"type":"dir","name":"rabbit"},{"type":"dir","name":"space_shooter"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"jeffreymjohnson.net","description":"My personal website and my canvas for learning ASP web development.","html_url":"https://github.com/JeffreyMJohnson/jeffreymjohnson.net","contents":[{"type":"file","name":".gitattributes"},{"type":"file","name":".gitignore"},{"type":"file","name":".useme"},{"type":"dir","name":"Main.Tests"},{"type":"dir","name":"Main"},{"type":"file","name":"ReadMe.md"},{"type":"dir","name":"TestFoo"},{"type":"file","name":"jeffreymjohnson.net.sln"}],"ReadMe_html":"<div class=\"announce instapaper_body md\" data-path=\"ReadMe.md\" id=\"readme\"><article class=\"markdown-body entry-content\" itemprop=\"text\"><p><strong>Foo</strong></p>\n\n<blockquote>\n<p>foo</p>\n</blockquote>\n\n<ol>\n<li>foo</li>\n<li>bar</li>\n<li><p>foo bar</p></li>\n</ol>\n\n<ul>\n<li>foo</li>\n<li>bar</li>\n</ul>\n\n<h1><a id=\"user-content-foo\" class=\"anchor\" href=\"#foo\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>foo</h1>\n</article></div>","UseMe":true},{"name":"JMath","description":null,"html_url":"https://github.com/JeffreyMJohnson/JMath","contents":[{"type":"file","name":".gitignore"},{"type":"file","name":".useme"},{"type":"dir","name":"JMath_library"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":true},{"name":"JUMP_MAN","description":"Playing with unity5 Mario demake.","html_url":"https://github.com/JeffreyMJohnson/JUMP_MAN","contents":[{"type":"file","name":".gitignore"},{"type":"file","name":"LICENSE"},{"type":"file","name":"README.md"}],"ReadMe_html":"<div class=\"announce instapaper_body md\" data-path=\"README.md\" id=\"readme\"><article class=\"markdown-body entry-content\" itemprop=\"text\"><h1><a id=\"user-content-jump_man\" class=\"anchor\" href=\"#jump_man\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JUMP_MAN</h1>\n\n<p>Playing with unity5 Mario demake.</p>\n</article></div>","UseMe":false},{"name":"Loco_Ocho","description":"Mobile 2 player card game crazy eights. Unity3D, C#","html_url":"https://github.com/JeffreyMJohnson/Loco_Ocho","contents":[{"type":"file","name":".gitignore"},{"type":"file","name":".useme"},{"type":"dir","name":"Assets"},{"type":"file","name":"ClassDiagram1.cd"},{"type":"file","name":"ClassDiagram2.cd"},{"type":"file","name":"ClassDiagram3.cd"},{"type":"file","name":"ClassDiagram4.cd"},{"type":"file","name":"LICENSE"},{"type":"dir","name":"ProjectSettings"},{"type":"file","name":"README.md"},{"type":"dir","name":"Unit_Tests"},{"type":"file","name":"UpgradeLog.htm"},{"type":"dir","name":"obj"}],"ReadMe_html":"<div class=\"announce instapaper_body md\" data-path=\"README.md\" id=\"readme\"><article class=\"markdown-body entry-content\" itemprop=\"text\"><h1><a id=\"user-content-loco_ocho\" class=\"anchor\" href=\"#loco_ocho\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Loco_Ocho</h1>\n\n<p>Mobile 2 player card game crazy eights. Unity3D, C#</p>\n</article></div>","UseMe":true},{"name":"Misc_File_Dump","description":"Place for misc files that are needed to transport/track","html_url":"https://github.com/JeffreyMJohnson/Misc_File_Dump","contents":[{"type":"file","name":".gitattributes"},{"type":"file","name":".gitignore"},{"type":"dir","name":"CollisionResponse"},{"type":"file","name":"UnityLicense.txt"},{"type":"dir","name":"WPF code"},{"type":"file","name":"girlUserControl.cs"},{"type":"file","name":"main.cpp"},{"type":"dir","name":"source"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"nsfwgl","description":"Not suited for work, openGL.","html_url":"https://github.com/JeffreyMJohnson/nsfwgl","contents":[{"type":"file","name":".gitattributes"},{"type":"file","name":".gitignore"},{"type":"file","name":"Post Mortem.pdf"},{"type":"file","name":"README.md"},{"type":"dir","name":"defer"},{"type":"dir","name":"dep"},{"type":"file","name":"nsfwgl.sln"},{"type":"dir","name":"nsfwgl"}],"ReadMe_html":"<div class=\"announce instapaper_body md\" data-path=\"README.md\" id=\"readme\"><article class=\"markdown-body entry-content\" itemprop=\"text\"><h1><a id=\"user-content-nsfwgl\" class=\"anchor\" href=\"#nsfwgl\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>nsfwgl</h1>\n\n<p>Not suited for work, openGL.</p>\n\n<p>Run the solution- it will automatically whine about what features need to be implemented.</p>\n\n<p>This project ONLY brings the glm dependency with it- STBI, GLFW, GL_CORE, FBX, OBJ, and other dependencies will need to be linked to the nsfwgl project as per normal.</p>\n\n<p>The solution uses a build dependency structure. nsfwgl produces a .lib file, that the defer project uses.</p>\n\n<p>This entire solution is logically complete/engineered. It may have features you wish to add or restructure- feel free to do so. Compiling/executing the code will produce a TODO note, indicating the line/file/details about what feature is missing and what you need to modify.</p>\n\n<p>Stepping through the main and understanding the individual activities going on is essential. If all of the TODO messages are resolved correctly and shaders successfully implemented, the project is done.</p>\n\n<p>Description of resources:</p>\n\n<p><em>NSFWGL</em></p>\n\n<p>Assets : Singleton object used for loading/making/storing openGL handles.</p>\n\n<p>Asset : Reference object to provide a layer of indirection to an individual GL asset in Assets (just some sugar!).</p>\n\n<p>Window : Singleton object used for wrapping GLFW</p>\n\n<p>Render : RenderpPass base object, intended to be inherited from to create shader/FBO associations.</p>\n\n<p>Application : A straightforward application base object intended to be inherited from.</p>\n\n<p>Vertex : A standard vertex format (replace with FBXVertex or whatever you want if you prefer- typedef it out though!).</p>\n\n<p><em>DEFER</em></p>\n\n<p>DefApp : Implements Application for this particular project.</p>\n\n<p>Camera, Geometry, Light: All contain uniform data necessary for rendering passes to work.</p>\n\n<p>GPass, LPassD, CPass : Each of the render passes for deferred rendering. They implement RenderPass from above.</p>\n</article></div>","UseMe":false},{"name":"nsfwgl-1","description":null,"html_url":"https://github.com/JeffreyMJohnson/nsfwgl-1","contents":[{"type":"file","name":".gitattributes"},{"type":"file","name":".gitignore"},{"type":"file","name":"README.md"},{"type":"dir","name":"defer"},{"type":"dir","name":"dep"},{"type":"dir","name":"forward"},{"type":"file","name":"nsfwgl.sln"},{"type":"dir","name":"nsfwgl"}],"ReadMe_html":"<div class=\"announce instapaper_body md\" data-path=\"README.md\" id=\"readme\"><article class=\"markdown-body entry-content\" itemprop=\"text\"><h1><a id=\"user-content-nsfwgl\" class=\"anchor\" href=\"#nsfwgl\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>nsfwgl</h1>\n\n<p>Not suited for work, openGL.</p>\n\n<p>Run the solution- it will automatically whine about what features need to be implemented.</p>\n\n<p>This project ONLY brings the glm dependency with it- STBI, GLFW, GL_CORE, FBX, OBJ, and other dependencies will need to be linked to the nsfwgl project as per normal.</p>\n\n<p>The solution uses a build dependency structure. nsfwgl produces a .lib file, that the defer project uses.</p>\n\n<p>This entire solution is logically complete/engineered. It may have features you wish to add or restructure- feel free to do so. Compiling/executing the code will produce a TODO note, indicating the line/file/details about what feature is missing and what you need to modify.</p>\n\n<p>Stepping through the main and understanding the individual activities going on is essential. If all of the TODO messages are resolved correctly and shaders successfully implemented, the project is done.</p>\n\n<p>Description of resources:</p>\n\n<p><em>NSFWGL</em></p>\n\n<p>Assets : Singleton object used for loading/making/storing openGL handles.</p>\n\n<p>Asset : Reference object to provide a layer of indirection to an individual GL asset in Assets (just some sugar!).</p>\n\n<p>Window : Singleton object used for wrapping GLFW</p>\n\n<p>Render : RenderpPass base object, intended to be inherited from to create shader/FBO associations.</p>\n\n<p>Application : A straightforward application base object intended to be inherited from.</p>\n\n<p>Vertex : A standard vertex format (replace with FBXVertex or whatever you want if you prefer- typedef it out though!).</p>\n\n<p><em>DEFER</em></p>\n\n<p>DefApp : Implements Application for this particular project.</p>\n\n<p>Camera, Geometry, Light: All contain uniform data necessary for rendering passes to work.</p>\n\n<p>GPass, LPassD, CPass : Each of the render passes for deferred rendering. They implement RenderPass from above.</p>\n</article></div>","UseMe":false},{"name":"nsfwgl_Knight","description":null,"html_url":"https://github.com/JeffreyMJohnson/nsfwgl_Knight","contents":[{"type":"file","name":".gitattributes"},{"type":"file","name":".gitignore"},{"type":"file","name":"README.md"},{"type":"dir","name":"defer"},{"type":"dir","name":"dep"},{"type":"file","name":"nsfwgl.sln"},{"type":"dir","name":"nsfwgl"}],"ReadMe_html":"<div class=\"announce instapaper_body md\" data-path=\"README.md\" id=\"readme\"><article class=\"markdown-body entry-content\" itemprop=\"text\"><h1><a id=\"user-content-nsfwgl\" class=\"anchor\" href=\"#nsfwgl\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>nsfwgl</h1>\n\n<p>Not suited for work, openGL.</p>\n\n<p>Run the solution- it will automatically whine about what features need to be implemented.</p>\n\n<p>This project ONLY brings the glm dependency with it- STBI, GLFW, GL_CORE, FBX, OBJ, and other dependencies will need to be linked to the nsfwgl project as per normal.</p>\n\n<p>The solution uses a build dependency structure. nsfwgl produces a .lib file, that the defer project uses.</p>\n\n<p>This entire solution is logically complete/engineered. It may have features you wish to add or restructure- feel free to do so. Compiling/executing the code will produce a TODO note, indicating the line/file/details about what feature is missing and what you need to modify.</p>\n\n<p>Stepping through the main and understanding the individual activities going on is essential. If all of the TODO messages are resolved correctly and shaders successfully implemented, the project is done.</p>\n\n<p>Description of resources:</p>\n\n<p><em>NSFWGL</em></p>\n\n<p>Assets : Singleton object used for loading/making/storing openGL handles.</p>\n\n<p>Asset : Reference object to provide a layer of indirection to an individual GL asset in Assets (just some sugar!).</p>\n\n<p>Window : Singleton object used for wrapping GLFW</p>\n\n<p>Render : RenderpPass base object, intended to be inherited from to create shader/FBO associations.</p>\n\n<p>Application : A straightforward application base object intended to be inherited from.</p>\n\n<p>Vertex : A standard vertex format (replace with FBXVertex or whatever you want if you prefer- typedef it out though!).</p>\n\n<p><em>DEFER</em></p>\n\n<p>DefApp : Implements Application for this particular project.</p>\n\n<p>Camera, Geometry, Light: All contain uniform data necessary for rendering passes to work.</p>\n\n<p>GPass, LPassD, CPass : Each of the render passes for deferred rendering. They implement RenderPass from above.</p>\n</article></div>","UseMe":false},{"name":"octo-capsicum","description":null,"html_url":"https://github.com/JeffreyMJohnson/octo-capsicum","contents":[{"type":"file","name":".gitattributes"},{"type":"file","name":".gitignore"},{"type":"file","name":"README.md"},{"type":"dir","name":"defer"},{"type":"dir","name":"dep"},{"type":"file","name":"nsfwgl.sln"},{"type":"dir","name":"nsfwgl"},{"type":"dir","name":"rsc"}],"ReadMe_html":"<div class=\"announce instapaper_body md\" data-path=\"README.md\" id=\"readme\"><article class=\"markdown-body entry-content\" itemprop=\"text\"><h1><a id=\"user-content-nsfwgl\" class=\"anchor\" href=\"#nsfwgl\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>nsfwgl</h1>\n\n<p>Not suited for work, openGL.</p>\n\n<p>Run the solution- it will automatically whine about what features need to be implemented.</p>\n\n<p>This project ONLY brings the glm dependency with it- STBI, GLFW, GL_CORE, FBX, OBJ, and other dependencies will need to be linked to the nsfwgl project as per normal.</p>\n\n<p>The solution uses a build dependency structure. nsfwgl produces a .lib file, that the defer project uses.</p>\n\n<p>This entire solution is logically complete/engineered. It may have features you wish to add or restructure- feel free to do so. Compiling/executing the code will produce a TODO note, indicating the line/file/details about what feature is missing and what you need to modify.</p>\n\n<p>Stepping through the main and understanding the individual activities going on is essential. If all of the TODO messages are resolved correctly and shaders successfully implemented, the project is done.</p>\n\n<p>Description of resources:</p>\n\n<p><em>NSFWGL</em></p>\n\n<p>Assets : Singleton object used for loading/making/storing openGL handles.</p>\n\n<p>Asset : Reference object to provide a layer of indirection to an individual GL asset in Assets (just some sugar!).</p>\n\n<p>Window : Singleton object used for wrapping GLFW</p>\n\n<p>Render : RenderpPass base object, intended to be inherited from to create shader/FBO associations.</p>\n\n<p>Application : A straightforward application base object intended to be inherited from.</p>\n\n<p>Vertex : A standard vertex format (replace with FBXVertex or whatever you want if you prefer- typedef it out though!).</p>\n\n<p><em>DEFER</em></p>\n\n<p>DefApp : Implements Application for this particular project.</p>\n\n<p>Camera, Geometry, Light: All contain uniform data necessary for rendering passes to work.</p>\n\n<p>GPass, LPassD, CPass : Each of the render passes for deferred rendering. They implement RenderPass from above.</p>\n</article></div>","UseMe":false},{"name":"ogl_tut","description":"yet another tutorial (separation is in the preparation). http://open.gl","html_url":"https://github.com/JeffreyMJohnson/ogl_tut","contents":[{"type":"file","name":".gitignore"},{"type":"dir","name":"gltut"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"OpenGLFramework","description":"Assessment #4","html_url":"https://github.com/JeffreyMJohnson/OpenGLFramework","contents":[{"type":"file","name":".gitattributes"},{"type":"file","name":".gitignore"},{"type":"dir","name":"GLFramework"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"OpenGL_Project","description":"Visual studio 13 project template for OpenGL programs. Uses and includes GLEW and GLFW libraries (32 bit).","html_url":"https://github.com/JeffreyMJohnson/OpenGL_Project","contents":[{"type":"file","name":"OpenGL_Project.zip"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"OpenGL_Tutorial","description":"tutorials for e-book Learning Modern 3D Graphics Programming by Jason L. McKesson - http://www.arcsynthesis.org/gltut/index.html","html_url":"https://github.com/JeffreyMJohnson/OpenGL_Tutorial","contents":[{"type":"file","name":".gitignore"},{"type":"file","name":"CC BY 3.0 legalcode.txt"},{"type":"file","name":"License.txt"},{"type":"file","name":"MIT License.txt"},{"type":"file","name":"README.md"},{"type":"dir","name":"Test"},{"type":"dir","name":"Tut 01 Hello Triangle"},{"type":"dir","name":"Tut 02 Playing with Colors"},{"type":"dir","name":"Tut 03 OpenGLs Moving Triangle"},{"type":"dir","name":"Tut 04 Objects at Rest"},{"type":"dir","name":"Tut 05 Objects in Depth"},{"type":"dir","name":"Tut 06 Objects in Motion"},{"type":"dir","name":"Tut 07 World in Motion"},{"type":"dir","name":"Tut 08 Getting Oriented"},{"type":"dir","name":"Tut 09 Lights on"},{"type":"dir","name":"Tut 10 Plane Lights"},{"type":"dir","name":"Tut 11 Shinies"},{"type":"dir","name":"Tut 12 Dynamic Range"},{"type":"dir","name":"Tut 13 Impostors"},{"type":"dir","name":"Tut 14 Textures Are Not Pictures"},{"type":"dir","name":"Tut 15 Many Images"},{"type":"dir","name":"Tut 16 Gamma and Textures"},{"type":"dir","name":"Tut 17 Spotlight on Textures"},{"type":"file","name":"TutorialsComp.pdf"},{"type":"file","name":"TutorialsKindle.pdf"},{"type":"file","name":"TutorialsPrintBW.pdf"},{"type":"dir","name":"data"},{"type":"dir","name":"framework"},{"type":"file","name":"get_externals.lua"},{"type":"dir","name":"glsdk"},{"type":"dir","name":"html"},{"type":"file","name":"index.html"},{"type":"file","name":"premake4.lua"},{"type":"file","name":"readme.txt"},{"type":"file","name":"version.txt"}],"ReadMe_html":"<div class=\"announce instapaper_body md\" data-path=\"README.md\" id=\"readme\"><article class=\"markdown-body entry-content\" itemprop=\"text\"><h1><a id=\"user-content-opengl_tutorial\" class=\"anchor\" href=\"#opengl_tutorial\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OpenGL_Tutorial</h1>\n\n<p>tutorials for e-book Learning Modern 3D Graphics Programming by Jason L. McKesson - <a href=\"http://www.arcsynthesis.org/gltut/index.html\">http://www.arcsynthesis.org/gltut/index.html</a></p>\n</article></div>","UseMe":false},{"name":"OpenGL_tut_2","description":"OpenGL tutorial from http://www.opengl-tutorial.org/","html_url":"https://github.com/JeffreyMJohnson/OpenGL_tut_2","contents":[{"type":"file","name":".gitignore"},{"type":"file","name":"BUILDING.txt"},{"type":"file","name":"CMakeLists.txt"},{"type":"file","name":"Makefile"},{"type":"dir","name":"common"},{"type":"dir","name":"external"},{"type":"dir","name":"misc01_math_cheatsheet"},{"type":"dir","name":"misc04_building_your_own_app"},{"type":"dir","name":"misc05_picking"},{"type":"dir","name":"playground"},{"type":"dir","name":"tutorial01_first_window"},{"type":"dir","name":"tutorial02_red_triangle"},{"type":"dir","name":"tutorial03_matrices"},{"type":"dir","name":"tutorial04_colored_cube"},{"type":"dir","name":"tutorial05_textured_cube"},{"type":"dir","name":"tutorial06_keyboard_and_mouse"},{"type":"dir","name":"tutorial07_model_loading"},{"type":"dir","name":"tutorial08_basic_shading"},{"type":"dir","name":"tutorial09_vbo_indexing"},{"type":"dir","name":"tutorial10_transparency"},{"type":"dir","name":"tutorial11_2d_fonts"},{"type":"dir","name":"tutorial12_extensions"},{"type":"dir","name":"tutorial13_normal_mapping"},{"type":"dir","name":"tutorial14_render_to_texture"},{"type":"dir","name":"tutorial15_lightmaps"},{"type":"dir","name":"tutorial16_shadowmaps"},{"type":"dir","name":"tutorial17_rotations"},{"type":"dir","name":"tutorial18_billboards_and_particles"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"pathfinder","description":null,"html_url":"https://github.com/JeffreyMJohnson/pathfinder","contents":[{"type":"file","name":".gitignore"},{"type":"dir","name":"unity project"},{"type":"dir","name":"web_build"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"playing-cards-assets","description":"Playing Cards Image Assets (SVG+PNG)","html_url":"https://github.com/JeffreyMJohnson/playing-cards-assets","contents":[{"type":"file","name":"Makefile"},{"type":"file","name":"README.md"},{"type":"dir","name":"png"},{"type":"dir","name":"svg-cards"},{"type":"file","name":"svg2png.js"}],"ReadMe_html":"<div class=\"announce instapaper_body md\" data-path=\"README.md\" id=\"readme\"><article class=\"markdown-body entry-content\" itemprop=\"text\"><h1><a id=\"user-content-playing-cards-ios-assets\" class=\"anchor\" href=\"#playing-cards-ios-assets\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Playing Cards iOS Assets</h1>\n\n<p>Courtesy of <a href=\"https://code.google.com/p/vector-playing-cards/\">https://code.google.com/p/vector-playing-cards/</a></p>\n\n<p>With some additional processing to remove borders of cards.</p>\n\n<p>Build the png assets with four parallel processes:</p>\n\n<pre><code>make -j 4 png\n</code></pre>\n\n<h1><a id=\"user-content-tools\" class=\"anchor\" href=\"#tools\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tools</h1>\n\n<p><a href=\"http://xmlstar.sourceforge.net/\">xmlstartlet</a> to remove the border path from svg.</p>\n\n<p><a href=\"https://github.com/domenic/svg2png\">svg2png</a> to convert svg to png (based on phantomjs)</p>\n</article></div>","UseMe":false},{"name":"Pong","description":"Pong game for first assesment","html_url":"https://github.com/JeffreyMJohnson/Pong","contents":[{"type":"file","name":".gitattributes"},{"type":"file","name":".gitignore"},{"type":"file","name":".useme"},{"type":"file","name":"AIE Template.sdf"},{"type":"file","name":"AIE Template.vcxproj"},{"type":"file","name":"AIE Template.vcxproj.filters"},{"type":"file","name":"AIE Template.vcxproj.user"},{"type":"file","name":"Pong.sln"},{"type":"file","name":"Pong.suo"},{"type":"file","name":"README.txt"},{"type":"dir","name":"bin"},{"type":"dir","name":"include"},{"type":"dir","name":"libs"},{"type":"dir","name":"obj"},{"type":"dir","name":"resources"},{"type":"dir","name":"source"}],"ReadMe_html":"<div class=\"announce instapaper_body txt\" data-path=\"README.txt\" id=\"readme\"><div class=\"plain\"><pre>Pong Dong\nA ‘Pong Clone’ made by Jeffrey M. Johnson.\nThe game is based on the rules for ping-pong. 2 players take turns returning a ball to the other side of the table.  If ball moves past a player’s paddle and off the edge of the screen the other player gains a point.  To win the match a player must gain more than 10 points and be ahead of his/her opponent by at least 2 points.\nThe player on the left-hand side of the screen is controlled by the ‘W’ and ‘X’ keys, while the player on the right uses the ‘[‘ and ‘/’ keys.\n\n</pre></div></div>","UseMe":true},{"name":"ProjectEuler","description":"code for solving problems at projecteuler.net. For those times I just need to code... ","html_url":"https://github.com/JeffreyMJohnson/ProjectEuler","contents":[{"type":"file","name":".gitignore"},{"type":"file","name":".useme"},{"type":"dir","name":"1"},{"type":"dir","name":"2"},{"type":"dir","name":"550"},{"type":"file","name":"LICENSE"},{"type":"file","name":"ProjectEuler.sln"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":true},{"name":"ProjectKansas","description":"Temp until I can get hooked up to the main one ","html_url":"https://github.com/JeffreyMJohnson/ProjectKansas","contents":[{"type":"file","name":".gitignore"},{"type":"dir","name":"Kansas_Unity"},{"type":"file","name":"README.md"}],"ReadMe_html":"<div class=\"announce instapaper_body md\" data-path=\"README.md\" id=\"readme\"><div class=\"plain\"><pre></pre></div></div>","UseMe":false},{"name":"PuckMan","description":null,"html_url":"https://github.com/JeffreyMJohnson/PuckMan","contents":[{"type":"file","name":".gitignore"},{"type":"dir","name":"Assets"},{"type":"dir","name":"ProjectSettings"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"retro_redux","description":"Project for assessment 3","html_url":"https://github.com/JeffreyMJohnson/retro_redux","contents":[{"type":"file","name":".gitignore"},{"type":"file","name":"AIE Template.vcxproj"},{"type":"file","name":"AIE Template.vcxproj.filters"},{"type":"file","name":"AIE Template.vcxproj.user"},{"type":"file","name":"Galaxian_Redux.sln"},{"type":"dir","name":"docs"},{"type":"dir","name":"include"},{"type":"dir","name":"libs"},{"type":"dir","name":"resources"},{"type":"dir","name":"source"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"roll_a_ball","description":"3d mini game for learning unity","html_url":"https://github.com/JeffreyMJohnson/roll_a_ball","contents":[{"type":"file","name":".gitignore"},{"type":"file","name":"Assembly-CSharp-Editor-vs.csproj"},{"type":"file","name":"Assembly-CSharp-Editor.csproj"},{"type":"file","name":"Assembly-CSharp-firstpass-vs.csproj"},{"type":"file","name":"Assembly-CSharp-firstpass.csproj"},{"type":"file","name":"Assembly-CSharp-vs.csproj"},{"type":"file","name":"Assembly-CSharp.csproj"},{"type":"file","name":"Assembly-UnityScript-vs.unityproj"},{"type":"file","name":"Assembly-UnityScript.unityproj"},{"type":"dir","name":"Builds"},{"type":"dir","name":"ProjectSettings"},{"type":"file","name":"README.txt"},{"type":"dir","name":"assets"},{"type":"file","name":"roll_a_ball-csharp.sln"},{"type":"file","name":"roll_a_ball.sln"},{"type":"file","name":"roll_a_ball.userprefs"}],"ReadMe_html":"<div class=\"announce instapaper_body txt\" data-path=\"README.txt\" id=\"readme\"><div class=\"plain\"><pre>Roll A Ball 3D game\nThis is a version of a tutorial on the Unity web site. Using it to learn the tools and get used to environment and work flow.  Have not decided if am going to publish on Google Play store.\n</pre></div></div>","UseMe":false},{"name":"ScriptXMLConverter","description":"Tool to convert excel xml script file to something can use.","html_url":"https://github.com/JeffreyMJohnson/ScriptXMLConverter","contents":[{"type":"file","name":".gitignore"},{"type":"file","name":".useme"},{"type":"file","name":"App.config"},{"type":"file","name":"GoogleDataSource.cs"},{"type":"file","name":"IScriptDataProvider.cs"},{"type":"file","name":"Program.cs"},{"type":"dir","name":"Properties"},{"type":"file","name":"ReadMe.pdf"},{"type":"file","name":"Script.cs"},{"type":"file","name":"ScriptXMLConvert.csproj"},{"type":"file","name":"ScriptXMLConvert.sln"},{"type":"file","name":"SheetRow.cs"},{"type":"dir","name":"Unit_Tests"},{"type":"file","name":"XLSXDataSource.cs"},{"type":"dir","name":"libs"},{"type":"dir","name":"misc"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":true},{"name":"SpaceInvadersTutorial","description":"Demo for school","html_url":"https://github.com/JeffreyMJohnson/SpaceInvadersTutorial","contents":[{"type":"file","name":".gitattributes"},{"type":"file","name":".gitignore"},{"type":"file","name":"AIE Template.vcxproj"},{"type":"file","name":"AIE Template.vcxproj.filters"},{"type":"file","name":"AIE Template.vcxproj.user"},{"type":"file","name":"SpaceInvadersTutorial.sln"},{"type":"file","name":"SpaceInvadersTutorial.suo"},{"type":"dir","name":"bin"},{"type":"dir","name":"include"},{"type":"dir","name":"libs"},{"type":"dir","name":"resources"},{"type":"dir","name":"source"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"Space_Shooter","description":"Unity tutorial game","html_url":"https://github.com/JeffreyMJohnson/Space_Shooter","contents":[{"type":"file","name":".gitignore"},{"type":"dir","name":"Assets"},{"type":"dir","name":"Builds"},{"type":"dir","name":"ProjectSettings"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"Suminacci_Code_Test","description":"Code test for internship at Kaio Interactive","html_url":"https://github.com/JeffreyMJohnson/Suminacci_Code_Test","contents":[{"type":"file","name":".gitignore"},{"type":"dir","name":"Assets"},{"type":"dir","name":"ProjectSettings"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"TabbedPanelControl","description":"Tabbed panel UI for Unity3D","html_url":"https://github.com/JeffreyMJohnson/TabbedPanelControl","contents":[{"type":"file","name":".gitignore"},{"type":"dir","name":"Assets"},{"type":"file","name":"LICENSE"},{"type":"dir","name":"ProjectSettings"},{"type":"file","name":"README.md"}],"ReadMe_html":"<div class=\"announce instapaper_body md\" data-path=\"README.md\" id=\"readme\"><article class=\"markdown-body entry-content\" itemprop=\"text\"><h1><a id=\"user-content-tabbedpanelcontrol\" class=\"anchor\" href=\"#tabbedpanelcontrol\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TabbedPanelControl</h1>\n\n<p>Tabbed panel UI for Unity3D</p>\n</article></div>","UseMe":false},{"name":"TerrainFoo","description":"Working on runtime Terrain and mesh generation.","html_url":"https://github.com/JeffreyMJohnson/TerrainFoo","contents":[{"type":"file","name":".gitignore"},{"type":"dir","name":"Assets"},{"type":"dir","name":"ProjectSettings"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"tilegame","description":"Katies Tilegame published game for Android","html_url":"https://github.com/JeffreyMJohnson/tilegame","contents":[{"type":"file","name":".classpath"},{"type":"file","name":".project"},{"type":"dir","name":".settings"},{"type":"file","name":".useme"},{"type":"file","name":"AndroidManifest.xml"},{"type":"file","name":"README.md"},{"type":"dir","name":"bin"},{"type":"dir","name":"gen"},{"type":"dir","name":"libs"},{"type":"file","name":"proguard-project.txt"},{"type":"file","name":"project.properties"},{"type":"dir","name":"res"},{"type":"dir","name":"src"}],"ReadMe_html":"<div class=\"announce instapaper_body md\" data-path=\"README.md\" id=\"readme\"><article class=\"markdown-body entry-content\" itemprop=\"text\"><h1><a id=\"user-content-tilegame\" class=\"anchor\" href=\"#tilegame\" aria-hidden=\"true\"><svg aria-hidden=\"true\" class=\"octicon octicon-link\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tilegame</h1>\n\n<p>Katies Tilegame published game for Android</p>\n</article></div>","UseMe":true},{"name":"Unity_fractal_tut","description":"Constructing a Fractal tutorial using Unity from http://catlikecoding.com/unity/tutorials/constructing-a-fractal/","html_url":"https://github.com/JeffreyMJohnson/Unity_fractal_tut","contents":[{"type":"file","name":".gitignore"},{"type":"dir","name":"Assets"},{"type":"dir","name":"ProjectSettings"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"Unity_graphs_tut","description":"Graphs tutorial using Unity from http://catlikecoding.com/unity/tutorials/graphs/","html_url":"https://github.com/JeffreyMJohnson/Unity_graphs_tut","contents":[{"type":"file","name":".gitignore"},{"type":"dir","name":"Assets"},{"type":"dir","name":"ProjectSettings"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"Unity_maze_tut","description":"Maze procedural generation tutorial using Unity from http://catlikecoding/unity/tutorial/maze/","html_url":"https://github.com/JeffreyMJohnson/Unity_maze_tut","contents":[{"type":"file","name":".gitignore"},{"type":"dir","name":"Assets"},{"type":"dir","name":"ProjectSettings"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"Unity_Networking","description":"Learning networking with Unity3D","html_url":"https://github.com/JeffreyMJohnson/Unity_Networking","contents":[{"type":"file","name":".gitignore"},{"type":"file","name":".useme"},{"type":"dir","name":"Assets"},{"type":"dir","name":"ProjectSettings"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":true},{"name":"Unity_runner_tut","description":"Unity tutorial from http://catlikecoding.com/unity/tutorials/runner","html_url":"https://github.com/JeffreyMJohnson/Unity_runner_tut","contents":[{"type":"file","name":".gitignore"},{"type":"dir","name":"Assets"},{"type":"dir","name":"ProjectSettings"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"Unity_sf_tut","description":"Street fighter tut I'm porting to unity.","html_url":"https://github.com/JeffreyMJohnson/Unity_sf_tut","contents":[{"type":"file","name":".gitignore"},{"type":"dir","name":"SF_Tut"},{"type":"dir","name":"images"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"unit_tests_retro_redux","description":null,"html_url":"https://github.com/JeffreyMJohnson/unit_tests_retro_redux","contents":[{"type":"file","name":".gitattributes"},{"type":"file","name":".gitignore"},{"type":"file","name":"ReadMe.txt"},{"type":"dir","name":"include"},{"type":"file","name":"stdafx.cpp"},{"type":"file","name":"stdafx.h"},{"type":"file","name":"targetver.h"},{"type":"file","name":"unit_tests_retro_redux.cpp"},{"type":"file","name":"unit_tests_retro_redux.vcxproj"},{"type":"file","name":"unit_tests_retro_redux.vcxproj.filters"}],"ReadMe_html":"<div class=\"announce instapaper_body txt\" data-path=\"ReadMe.txt\" id=\"readme\"><div class=\"plain\"><pre>========================================================================\n    CONSOLE APPLICATION : unit_tests_retro_redux Project Overview\n========================================================================\n\nAppWizard has created this unit_tests_retro_redux application for you.\n\nThis file contains a summary of what you will find in each of the files that\nmake up your unit_tests_retro_redux application.\n\n\nunit_tests_retro_redux.vcxproj\n    This is the main project file for VC++ projects generated using an Application Wizard.\n    It contains information about the version of Visual C++ that generated the file, and\n    information about the platforms, configurations, and project features selected with the\n    Application Wizard.\n\nunit_tests_retro_redux.vcxproj.filters\n    This is the filters file for VC++ projects generated using an Application Wizard. \n    It contains information about the association between the files in your project \n    and the filters. This association is used in the IDE to show grouping of files with\n    similar extensions under a specific node (for e.g. \".cpp\" files are associated with the\n    \"Source Files\" filter).\n\nunit_tests_retro_redux.cpp\n    This is the main application source file.\n\n/////////////////////////////////////////////////////////////////////////////\nOther standard files:\n\nStdAfx.h, StdAfx.cpp\n    These files are used to build a precompiled header (PCH) file\n    named unit_tests_retro_redux.pch and a precompiled types file named StdAfx.obj.\n\n/////////////////////////////////////////////////////////////////////////////\nOther notes:\n\nAppWizard uses \"TODO:\" comments to indicate parts of the source code you\nshould add to or customize.\n\n/////////////////////////////////////////////////////////////////////////////\n</pre></div></div>","UseMe":false},{"name":"WPFTest","description":null,"html_url":"https://github.com/JeffreyMJohnson/WPFTest","contents":[{"type":"file","name":".gitignore"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"WPF_Fun","description":"Fun with WPF.","html_url":"https://github.com/JeffreyMJohnson/WPF_Fun","contents":[{"type":"file","name":".gitattributes"},{"type":"file","name":".gitignore"},{"type":"dir","name":"Solution"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":false},{"name":"YAGLF","description":"Yet Another GL Framework","html_url":"https://github.com/JeffreyMJohnson/YAGLF","contents":[{"type":"file","name":".gitignore"},{"type":"file","name":".useme"},{"type":"dir","name":"Deferred_Rendering_Project"},{"type":"file","name":"GLFramework.sln"},{"type":"file","name":"GLFramework.vcxproj"},{"type":"file","name":"GLFramework.vcxproj.filters"},{"type":"dir","name":"Lighting_Project"},{"type":"dir","name":"Particles_Project"},{"type":"dir","name":"Post_Process_Project"},{"type":"dir","name":"Render_Targets_Project"},{"type":"dir","name":"Shadows_Project"},{"type":"dir","name":"Testy"},{"type":"dir","name":"Textures_Project"},{"type":"dir","name":"include"},{"type":"dir","name":"libs"},{"type":"dir","name":"lights"},{"type":"dir","name":"resources"},{"type":"dir","name":"source"}],"ReadMe_html":"<div>No ReadMe file in the repo yet. Get on it.</div>","UseMe":true}]